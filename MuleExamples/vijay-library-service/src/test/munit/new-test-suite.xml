<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:mock="http://www.mulesoft.org/schema/mule/mock" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core" version="EE-3.6.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd">
    <munit:config name="munit" doc:name="MUnit configuration"/>
    <spring:beans>
        <spring:import resource="classpath:vijay-library-service.xml"/>
    </spring:beans>
    <munit:test name="new-test-suite-DeleteBookFlowTest" description="Test">
        <flow-ref name="DeleteBookFlow" doc:name="Flow-ref to DeleteBookFlow"/>
        <munit:assert-true condition="#[payload instanceof org.vijay.services.rest.libraryservice.DeleteBookResponse]" doc:name="Assert True"/>
        <munit:assert-on-equals expectedValue="#[&quot;200&quot;]" actualValue="#[payload.getStatusCode()]" doc:name="Assert Equals"/>
    </munit:test>
    <munit:test name="get-book-id-flow-test" description="Test">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Database']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[new org.mule.util.CaseInsensitiveHashMap()]"/>
        </mock:when>
        <mock:spy messageProcessor=".*:.*" doc:name="Spy">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Database']"/>
            </mock:with-attributes>
            <mock:assertions-before-call>
                <munit:assert-on-equals expectedValue="#[bookName]" actualValue="TEST" doc:name="Assert Equals"/>
            </mock:assertions-before-call>
            <mock:assertions-after-call>
                <munit:assert-true condition="#[payload instanceof org.mule.util.CaseInsensitiveHashMap]" doc:name="Assert True"/>
            </mock:assertions-after-call>
        </mock:spy>
        <set-variable variableName="bookName" value="TEST" doc:name="Variable"/>
        <flow-ref name="get-bookid-flow" doc:name="Flow-ref to get-bookid-flow"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
        <munit:assert-true condition="#[payload instanceof org.mule.util.CaseInsensitiveHashMap]" doc:name="Assert True"/>
        <munit:assert-true condition="#[payload.size() == 0]" doc:name="Assert True"/>
        <mock:verify-call messageProcessor=".*:.*" atMost="1" doc:name="Verify Call">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Database']"/>
            </mock:with-attributes>
        </mock:verify-call>
    </munit:test>
</mule>
