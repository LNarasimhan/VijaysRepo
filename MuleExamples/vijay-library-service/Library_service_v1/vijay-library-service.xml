<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:jersey="http://www.mulesoft.org/schema/mule/jersey"
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.6.1"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/jersey http://www.mulesoft.org/schema/mule/jersey/current/mule-jersey.xsd">
	<http:listener-config name="HTTP_REST_Config"
		host="0.0.0.0" port="10000" doc:name="HTTP Listener Configuration" />
	<vm:connector name="VM" validateConnections="true"
		doc:name="VM" />

	<spring:beans>
		<spring:bean id="bookMaps" class="java.util.HashMap" />
	</spring:beans>

	<flow name="vijay-library-serviceFlow">
		<http:listener config-ref="HTTP_REST_Config" path="/*"
			doc:name="Library Service" />
		<logger message="Received Request: #[payload]" level="INFO"
			doc:name="Log request payload" />
		<jersey:resources doc:name="Library Service">
			<component class="org.vijay.services.libraryservice.VijayLibraryService">
				<binding
					interface="org.vijay.services.libraryservice.VijayLibraryServiceBinding"
					method="addBook">
					<vm:outbound-endpoint exchange-pattern="request-response"
						path="addBookVM" />
				</binding>
				<binding
					interface="org.vijay.services.libraryservice.VijayLibraryServiceBinding"
					method="updateBook">
					<vm:outbound-endpoint exchange-pattern="request-response"
						path="updateBookVM" />
				</binding>
				<binding
					interface="org.vijay.services.libraryservice.VijayLibraryServiceBinding"
					method="deleteBook">
					<vm:outbound-endpoint exchange-pattern="request-response"
						path="deleteBookVM" />
				</binding>
				<binding
					interface="org.vijay.services.libraryservice.VijayLibraryServiceBinding"
					method="findBook">
					<vm:outbound-endpoint exchange-pattern="request-response"
						path="findBookVM" />
				</binding>
				<binding
					interface="org.vijay.services.libraryservice.VijayLibraryServiceBinding"
					method="getBook">
					<vm:outbound-endpoint exchange-pattern="request-response"
						path="getBookVM" />
				</binding>
			</component>
		</jersey:resources>
	</flow>
	<flow name="AddBookFlow">
		<vm:inbound-endpoint exchange-pattern="request-response"
			doc:name="AddBookVM" connector-ref="VM" path="addBookVM" />
		<logger message="Book Name: #[payload.getBook().getName()]"
			level="INFO" doc:name="Logger" />
		<choice doc:name="Validation Choice">
			<when expression="#[payload.getBook() == null]">
				<scripting:component doc:name="Return Invalid Request">
					<scripting:script engine="Groovy"><![CDATA[org.vijay.services.rest.libraryservice.AddBookResponse resp = new org.vijay.services.rest.libraryservice.AddBookResponse();
resp.setStatusCode("400");
resp.setStatusMessage("Book Object is null");
payload = resp;]]></scripting:script>
				</scripting:component>
			</when>
			<when expression="#[payload.getBook().getName() == null]">
				<scripting:component doc:name="Return Book Name Invalid">
					<scripting:script engine="Groovy"><![CDATA[org.vijay.services.rest.libraryservice.AddBookResponse resp = new org.vijay.services.rest.libraryservice.AddBookResponse();
resp.setStatusCode("400");
resp.setStatusMessage("Book Name is null");
payload = resp;]]></scripting:script>
				</scripting:component>
			</when>
			<when expression="#[payload.book.author == null]">
				<scripting:component doc:name="Return Book Author Invalid">
					<scripting:script engine="Groovy"><![CDATA[org.vijay.services.rest.libraryservice.AddBookResponse resp = new org.vijay.services.rest.libraryservice.AddBookResponse();
resp.setStatusCode("400");
resp.setStatusMessage("Book Author is null");
payload = resp;]]></scripting:script>
				</scripting:component>
			</when>
			<when expression="#[payload.getBook().getYear() == null]">
				<scripting:component doc:name="Return Book Year Invalid">
					<scripting:script engine="Groovy"><![CDATA[org.vijay.services.rest.libraryservice.AddBookResponse resp = new org.vijay.services.rest.libraryservice.AddBookResponse();
resp.setStatusCode("400");
resp.setStatusMessage("Book Year is null");
payload = resp;]]></scripting:script>
				</scripting:component>
			</when>
			<otherwise>
				<expression-component doc:name="Add to Books Maps"><![CDATA[#[app.registry.bookMaps.put(payload.book.id, payload.book)]]]></expression-component>
				<scripting:component doc:name="Return Success">
					<scripting:script engine="Groovy"><![CDATA[org.vijay.services.rest.libraryservice.AddBookResponse resp = new org.vijay.services.rest.libraryservice.AddBookResponse();
resp.setStatusCode("200");
resp.setStatusMessage("Book Added Successfully");
payload = resp;]]></scripting:script>
				</scripting:component>
			</otherwise>
		</choice>
	</flow>
	<flow name="UpdateBookFlow">
		<vm:inbound-endpoint exchange-pattern="request-response"
			doc:name="UpdateBookVM" connector-ref="VM" path="updateBookVM" />
		<scripting:component doc:name="Groovy">
			<scripting:script engine="Groovy"><![CDATA[org.vijay.services.rest.libraryservice.UpdateBookResponse resp = new org.vijay.services.rest.libraryservice.UpdateBookResponse();
resp.setStatusCode("200");
resp.setStatusMessage("TEST Upd");
payload = resp;]]></scripting:script>
		</scripting:component>
	</flow>
	<flow name="DeleteBookFlow">
		<vm:inbound-endpoint exchange-pattern="request-response"
			doc:name="DeleteBookVM" connector-ref="VM" path="deleteBookVM" />
		<scripting:component doc:name="Groovy">
			<scripting:script engine="Groovy"><![CDATA[org.vijay.services.rest.libraryservice.DeleteBookResponse resp = new org.vijay.services.rest.libraryservice.DeleteBookResponse();
resp.setStatusCode("200");
resp.setStatusMessage("TEST Del");
payload = resp;]]></scripting:script>
		</scripting:component>
	</flow>
	<flow name="FindBookFlow">
		<vm:inbound-endpoint exchange-pattern="request-response"
			doc:name="FindBookVM" connector-ref="VM" path="findBookVM" />
		<set-variable variableName="books" value="#[new java.util.ArrayList()]"
			doc:name="booksList" />
		<foreach counterVariableName="counter"
			collection="#[app.registry.bookMaps.values()]" doc:name="Loop Books">
			<scripting:component doc:name="Groovy">
				<scripting:script engine="Groovy"><![CDATA[
	            org.vijay.services.rest.libraryservice.Book bk = payload;
				books.add(bk);
				]]></scripting:script>
			</scripting:component>
		</foreach>
		<scripting:component doc:name="Groovy">
			<scripting:script engine="Groovy"><![CDATA[
            org.vijay.services.rest.libraryservice.FindBookResponse resp = new org.vijay.services.rest.libraryservice.FindBookResponse();
            org.vijay.services.rest.libraryservice.BookList booksList = new org.vijay.services.rest.libraryservice.BookList();
            resp.setBookList(booksList);
            resp.setBooksCount(String.valueOf(books.size()));
            resp.setStatusCode("200");
            resp.setStatusMessage("Success");
            booksList.getBooks().addAll(books);
			payload = resp;
			]]></scripting:script>
		</scripting:component>
		<catch-exception-strategy>
			<logger level="ERROR" message="#[exception]" />
			<scripting:component doc:name="Groovy">
				<scripting:script engine="Groovy"><![CDATA[
            org.vijay.services.rest.libraryservice.FindBookResponse resp = new org.vijay.services.rest.libraryservice.FindBookResponse();
            org.vijay.services.rest.libraryservice.BookList booksList = new org.vijay.services.rest.libraryservice.BookList();
            resp.setBookList(booksList);
            resp.setStatusCode("500");
            resp.setStatusMessage("Error occured!" + message.getExceptionPayload().getRootException().getMessage());
			payload = resp;
			]]></scripting:script>
			</scripting:component>
		</catch-exception-strategy>
	</flow>
	<flow name="GetBookFlow">
		<vm:inbound-endpoint exchange-pattern="request-response"
			doc:name="GetBookVM" connector-ref="VM" path="getBookVM" />
		<scripting:component doc:name="Groovy">
			<scripting:script engine="Groovy"><![CDATA[org.vijay.services.rest.libraryservice.GetBookResponse resp = new org.vijay.services.rest.libraryservice.GetBookResponse();
payload = resp;]]></scripting:script>
		</scripting:component>
	</flow>
</mule>
